import{Q as c}from"./QItemLabel.c7948ba6.js";import{ad as b,h as i,ae as d,af as g,aj as u,c as k,ag as r,ai as p,ah as t,f as n,as as L,at as C,ar as S,au as I,av as U,aw as w}from"./index.97bff0c1.js";import{Q as V}from"./QPage.e87dc99e.js";import{m as F}from"./index.esm.f52655f1.js";function _(l){this.message=l}_.prototype=new Error,_.prototype.name="InvalidCharacterError";var v=typeof window!="undefined"&&window.atob&&window.atob.bind(window)||function(l){var e=String(l).replace(/=+$/,"");if(e.length%4==1)throw new _("'atob' failed: The string to be decoded is not correctly encoded.");for(var s,o,a=0,h=0,y="";o=e.charAt(h++);~o&&(s=a%4?64*s+o:o,a++%4)?y+=String.fromCharCode(255&s>>(-2*a&6)):0)o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(o);return y};function E(l){var e=l.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw"Illegal base64url string!"}try{return function(s){return decodeURIComponent(v(s).replace(/(.)/g,function(o,a){var h=a.charCodeAt(0).toString(16).toUpperCase();return h.length<2&&(h="0"+h),"%"+h}))}(e)}catch{return v(e)}}function m(l){this.message=l}function f(l,e){if(typeof l!="string")throw new m("Invalid token specified");var s=(e=e||{}).header===!0?0:1;try{return JSON.parse(E(l.split(".")[s]))}catch(o){throw new m("Invalid token specified: "+o.message)}}m.prototype=new Error,m.prototype.name="InvalidTokenError";const A={class:"column items-center q-pt-lg border-div"},$={key:0,col:""},D={class:"q-pt-lg"},P={class:"q-pt-sm"},Q={class:"q-pt-md"},T={key:1,class:"col"},R={class:"col q-pt-md"},H={class:"col"},N={class:"q-pt-md"},j={name:"LoginPage",data(){return{user_email:"",user_handle:"",user_password:"",user_password2:"",logging_in_classic:!1,forgot_password:!1,new_user:!1,showLoginFailedDialog:!1,error_message:""}},async mounted(){sessionStorage.setItem("shrinkHeader","false"),this.$eventbus.emit("shrinkHeader","false")},methods:{getClassicLogin(){this.logging_in_classic=!0},getSocialLogin(){this.logging_in_classic=!1},googleAuth(l){console.log("Handle the response",l);const e=F(l.credential);console.log("Handle the userData",e),console.log("Handle the email",e.email),console.log("Handle the token",e.jti),this.serverLogin(e.email,e.jti)},async helloAuth(l){try{const e=await this.$hello(l).login({scope:"email,user_friends",returned_scopes:!0});console.log(e),console.log("saving access_token: "+e.authResponse.access_token);const s=e.authResponse.access_token,o=await this.$hello(l).api("me");console.log(o.email),console.log("facebook me res: "+JSON.stringify(o));const a=await this.userExistsTest(o.email);console.log("user_exists_response: "+a),a||(console.log("user does not exist, this will be where we call addUser"),this.addUser(o.email,"")),this.user_password="",this.serverLogin(o.email,s)}catch(e){console.log("Error: ",e)}},serverLogin(l,e){console.log("In serverLogin, user_email",l);const s={email:l,token:e,password:this.user_password};console.log("userToken",JSON.stringify(e)),console.log("payload to send: ",s),this.$api.post("/api/login",s).then(o=>{console.log("Response from server: ",o),console.log("Response from server decoded..."),console.log("jwt_decode: ",f(o.data)),sessionStorage.setItem("token",o.data),console.log("Session loggedIn now: "+sessionStorage.getItem("loggedIn")),sessionStorage.setItem("loggedIn","true"),this.$eventbus.emit("loggedIn","true"),console.log("isAdmin: "+f(o.data).isAdmin),f(o.data).isAdmin?(sessionStorage.setItem("isAdmin","true"),this.$eventbus.emit("isAdmin","true")):(sessionStorage.setItem("isAdmin","false"),this.$eventbus.emit("isAdmin","false")),console.log("Session loggedIn now: "+sessionStorage.getItem("loggedIn")),this.$router.push("/my-shows")}).catch(o=>(console.log("Error: ",o),this.error_message="Login failed. Please try again.",this.showLoginFailedDialog=!0,!1))},isValidEmail(l){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(l)},isValidPassword(l){return l.length>=8},passwordsMatch(){return this.user_password===this.user_password2},async handleSignup(){const l=this.isValidEmail(this.user_email),e=this.isValidPassword(this.user_password),s=this.passwordsMatch(),o=await this.userExistsTest(this.user_email);console.log("user_exists_response: "+o),l?e?s?o?(this.error_message="User with this email already exists. Try forgot password",this.showLoginFailedDialog=!0):this.addUser(this.user_email,this.user_password):(this.error_message="Signup Failed: Passwords do not match",this.showLoginFailedDialog=!0):(this.error_message="Signup Failed: Password should be at least 8 characters long",this.showLoginFailedDialog=!0):(this.error_message="Signup Failed. User login should be a valid email address",this.showLoginFailedDialog=!0),this.serverLogin(this.user_email,this.user_password)},handleLogin(){this.isValidEmail(this.user_email)?this.serverLogin(this.user_email,this.user_password):(this.error_message="Suggestion: Login should be a valid email address",this.showLoginFailedDialog=!0),this.serverLogin(this.user_email,"")},handleFailedLogin(){this.error_message="",this.showLoginFailedDialog=!1,this.password=""},forgotPassword(){this.forgot_password=!0,this.new_user=!1},rememberPassword(){this.forgot_password=!1,this.new_user=!1},newUser(){this.user_password="",this.new_user=!0,this.forgot_password=!1},alreadyUser(){this.new_user=!1,this.forgot_password=!1},async userExistsTest(l){console.log("In userExistsTest, userEmail",l);const e={email:l};console.log("payload to send: ",e);let s=!1;try{const o=await this.$api.post("/api/user-exists",e);console.log("Response from server user-exists call: ",o),console.log("Response from server user-exists call data: ",o.data),s=o.data}catch(o){return console.log("Error: ",o),!1}return console.log("Response to return from local userExists method: ",s),s},suggestHandle(){const l=this.user_email.split("@")[0];this.user_handle=l},addUser(l,e){console.log("In addUser, userEmail",l),this.user_email=l,this.suggestHandle(),console.log("In addUser, user_handle",this.user_handle);const s={email:l,handle:this.user_handle,password:e};console.log("payload to send: ",s),this.$api.post("/api/add-user",s).then(o=>{console.log("Response from server: ",o)}).catch(o=>{console.log("Error: ",o)})}}},G=Object.assign(j,{setup(l){return(e,s)=>{const o=b("GoogleLogin");return i(),d(V,{class:"row items-top justify-evenly"},{default:g(()=>[u("div",A,[e.logging_in_classic?n("",!0):(i(),k("div",$,[r(c,{class:"header"},{default:g(()=>[p("Time to Sign in!")]),_:1}),u("div",D,[r(o,{callback:e.googleAuth},null,8,["callback"])]),u("div",P,[r(t,{color:"blue",icon:"facebook",label:"Login with Facebook",class:"login-button",onClick:s[0]||(s[0]=a=>e.helloAuth("facebook"))})]),u("div",Q,[r(t,{color:"primary",label:"I'll login myself thanks!",class:"login-button",onClick:e.getClassicLogin},null,8,["onClick"])])])),e.logging_in_classic?(i(),k("div",T,[r(c,{class:"header"},{default:g(()=>[p("Sign-in Classic Style!")]),_:1}),r(U,{modelValue:e.showLoginFailedDialog,"onUpdate:modelValue":s[1]||(s[1]=a=>e.showLoginFailedDialog=a)},{default:g(()=>[r(L,null,{default:g(()=>[r(C,null,{default:g(()=>[r(c,{color:"negative"},{default:g(()=>[p(" Login Failed ")]),_:1}),r(c,null,{default:g(()=>[p(S(e.error_message),1)]),_:1})]),_:1}),r(I,{align:"right"},{default:g(()=>[r(t,{label:"OK",color:"primary",onClick:e.handleFailedLogin},null,8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue"]),u("div",R,[r(w,{filled:"",type:"email",modelValue:e.user_email,"onUpdate:modelValue":s[2]||(s[2]=a=>e.user_email=a),label:"user email",clearable:""},null,8,["modelValue"]),e.forgot_password?n("",!0):(i(),d(w,{key:0,filled:"",modelValue:e.user_password,"onUpdate:modelValue":s[3]||(s[3]=a=>e.user_password=a),label:"password",type:"password"},null,8,["modelValue"])),!e.forgot_password&&e.new_user?(i(),d(w,{key:1,filled:"",modelValue:e.user_password2,"onUpdate:modelValue":s[4]||(s[4]=a=>e.user_password2=a),label:"type password again",type:"password"},null,8,["modelValue"])):n("",!0),!e.forgot_password&&!e.new_user?(i(),d(t,{key:2,color:"primary",glossy:"",label:"login",onClick:s[5]||(s[5]=a=>e.handleLogin()),style:{width:"248px"}})):n("",!0),!e.forgot_password&&e.new_user?(i(),d(t,{key:3,color:"primary",glossy:"",label:"Sign Up!",onClick:s[6]||(s[6]=a=>e.handleSignup()),style:{width:"248px"}})):n("",!0),e.forgot_password?(i(),d(t,{key:4,color:"primary",glossy:"",label:"send password reset email",onClick:s[7]||(s[7]=a=>e.resetPassword(e.user_email)),style:{width:"248px"}})):n("",!0)]),u("div",H,[e.forgot_password?n("",!0):(i(),d(t,{key:0,color:"secondary",glossy:"",label:"Forgot password?",onClick:e.forgotPassword,dense:"",class:"small-italic",style:{width:"124px"}},null,8,["onClick"])),e.forgot_password?(i(),d(t,{key:1,color:"secondary",glossy:"",label:"I remembered!",onClick:e.rememberPassword,dense:"",class:"small-italic",style:{width:"124px"}},null,8,["onClick"])):n("",!0),e.new_user?n("",!0):(i(),d(t,{key:2,color:"secondary",glossy:"",label:"New User?",onClick:e.newUser,dense:"",class:"small-italic",style:{width:"124px"}},null,8,["onClick"])),e.new_user?(i(),d(t,{key:3,color:"secondary",glossy:"",label:"Already a User?",onClick:e.alreadyUser,dense:"",class:"small-italic",style:{width:"124px"}},null,8,["onClick"])):n("",!0)]),u("div",N,[r(t,{color:"primary",glossy:"",label:"Sign-in with Social!",onClick:e.getSocialLogin,style:{width:"248px"}},null,8,["onClick"])])])):n("",!0)])]),_:1})}}});export{G as default};
