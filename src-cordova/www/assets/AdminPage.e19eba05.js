import{ac as c,h as m,ae as d,af as f,aj as i,ag as l,aw as p,ah as g}from"./index.97bff0c1.js";import{Q as y}from"./QPage.e87dc99e.js";const u={name:"LoginPage",data(){return{messageToVerify:""}},async mounted(){sessionStorage.getItem("loggedIn")==="false"&&sessionStorage.getItem("isAdmin")==="true"?(console.log("Not logged in, redirecting to login page"),this.$router.push("/login")):console.log("Logged in, doing show page stuff")},methods:{verifyMessage(o){console.log("In verifyMessage, messageToVerify: ",o);const e={message:o},r={authorization:sessionStorage.getItem("token")};console.log("payload to send: ",e),console.log("headers to send: ",r),this.$api.get("/api-test/verify",{headers:r}).then(s=>{console.log("Response from server: ",s)}).catch(s=>{console.log("Error: ",s)})},async createPostFromText(o){console.log("In createPostFromText, messageToVerify: ",o);try{const e=await this.$gptFromText(o);console.log(e)}catch(e){console.error(e)}}}},h={class:"column items-center",style:{height:"150px"}},v={class:"col q-pt-xl"};function x(o,e,r,s,t,n){return m(),d(y,{class:"row items-center justify-evenly"},{default:f(()=>[i("div",h,[i("div",v,[l(p,{filled:"",modelValue:t.messageToVerify,"onUpdate:modelValue":e[0]||(e[0]=a=>t.messageToVerify=a),label:"message to verify"},null,8,["modelValue"]),l(g,{color:"primary",glossy:"",label:"test message verify api",onClick:e[1]||(e[1]=a=>n.verifyMessage(t.messageToVerify)),style:{width:"248px"}}),l(g,{color:"primary",glossy:"",label:"create post from text",onClick:e[2]||(e[2]=a=>n.createPostFromText(t.messageToVerify)),style:{width:"248px"}})])])]),_:1})}var w=c(u,[["render",x]]);export{w as default};
